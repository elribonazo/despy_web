{
  "name": "spotify-web",
  "version": "1.2.0",
  "description": "Node.js implementation of the Spotify Web protocol",
  "main": "index.js",
  "dependencies": {
    "cheerio": "~0.10.5",
    "debug": "~0.7.0",
    "protobufjs": "~2.0.0-rc2",
    "superagent": "~0.12.0",
    "ws": "~0.4.25",
    "readable-stream": "~0.2.0",
    "protobuf": "~0.8.6"
  },
  "optionalDependencies": {
    "protobuf": "~0.8.6"
  },
  "devDependencies": {
    "lame": "~1.0.1",
    "speaker": "~0.0.6",
    "xml2js": "~0.2.2"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/node-spotify-web.git"
  },
  "author": {
    "name": "Nathan Rajlich",
    "email": "nathan@tootallnate.net",
    "url": "http://tootallnate.net"
  },
  "license": "MIT",
  "readme": "node-spotify-web\n================\n### Node.js implementation of the Spotify Web protocol\n\nThis module implements the \"Spotify Web\" WebSocket protocol that is used on\nSpotify's [Web UI](http://play.spotify.com).\n\nThis module is heavily inspired by the original open-source Python implementation:\n[Hexxeh/spotify-websocket-api](https://github.com/Hexxeh/spotify-websocket-api).\n\nInstallation\n------------\n\n``` bash\n$ npm install spotify-web\n```\n\n\nExample\n-------\n\nHere's an example of logging in to the Spotify server and creating a session. Then\nrequesting the metadata for a given track URI, and playing the track audio file\nthrough the speakers:\n\n``` javascript\nvar lame = require('lame');\nvar Speaker = require('speaker');\nvar Spotify = require('spotify-web');\nvar uri = process.argv[2] || 'spotify:track:6tdp8sdXrXlPV6AZZN2PE8';\n\n// Spotify credentials...\nvar username = process.env.USERNAME;\nvar password = process.env.PASSWORD;\n\nSpotify.login(username, password, function (err, spotify) {\n  if (err) throw err;\n\n  // first get a \"Track\" instance from the track URI\n  spotify.get(uri, function (err, track) {\n    if (err) throw err;\n    console.log('Playing: %s - %s', track.artist[0].name, track.name);\n\n    // play() returns a readable stream of MP3 audio data\n    track.play()\n      .pipe(new lame.Decoder())\n      .pipe(new Speaker())\n      .on('finish', function () {\n        spotify.disconnect();\n      });\n\n  });\n});\n```\n\nSee the `example` directory for some more example code.\n\n\nAPI\n---\n\nTODO: document!\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2013-2014 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/TooTallNate/node-spotify-web/issues"
  },
  "homepage": "https://github.com/TooTallNate/node-spotify-web",
  "_id": "spotify-web@1.2.0",
  "_shasum": "3304642e151ea26bf18744093a748aa396587391",
  "_resolved": "git://github.com/1994rstefan/node-spotify-web.git#5ead85f4b19f9861c7f621c2f1dbb95437484bc5",
  "_from": "spotify-web@^1.2.0"
}
